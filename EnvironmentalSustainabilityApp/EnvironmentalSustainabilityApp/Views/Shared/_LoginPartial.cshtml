@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    string controllerName = "";
    string actionName = "";

    if (SignInManager.IsSignedIn(User))
    {
        controllerName = ViewContext.RouteData.Values["Controller"].ToString();
        actionName = ViewContext.RouteData.Values["Action"].ToString();
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item  @(controllerName == "Home" && actionName == "Profile" ? "active" : "")" style="margin-right: 10px;">
            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Profile" title="Manage">Profile</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("LoginPage", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
            </form>
        </li>
    }
</ul>
